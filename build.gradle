buildscript {
	// Executed in context of buildscript
	repositories {
		// mavenLocal()
		mavenCentral()
		// jcenter()
		// maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
		gradlePluginPortal()
	}

	dependencies {
		classpath 'org.anarres.gradle:gradle-stdproject-plugin:1.0.10'
	}
}

apply plugin: 'org.anarres.stdproject'
stdproject {
	javadocLink "https://fasterxml.github.io/jackson-core/javadoc/2.5/"
	javadocLink "https://fasterxml.github.io/jackson-databind/javadoc/2.5/"
	javadocLink "http://docs.guava-libraries.googlecode.com/git/javadoc/"
	javadocGroup "QApi/QMP: QEmu Management Protocol", "org.anarres.qemu.qapi*"
	javadocGroup "Command Line Building and Execution", "org.anarres.qemu.exec*"
	javadocGroup "Image Management and Manipulation", "org.anarres.qemu.image*"
	javadocGroup "Process Management", "org.anarres.qemu.manager*"
	javadocGroup "Demos and Examples", "org.anarres.qemu.examples*"
}

subprojects {
	group = "org.anarres.qemu"

	apply plugin: 'org.anarres.stdmodule'
	stdmodule {
		description "QEmu/KVM process manager and RPC API."
		author id: 'shevek', name: 'Shevek', email: 'github@anarres.org'
		license 'Apache-2.0'
	}

	dependencies {
		compile 'com.google.code.findbugs:annotations:2.0.3'
		compile "org.slf4j:slf4j-api:1.7.12"
		compile "com.google.guava:guava:18.0"
		compile 'com.fasterxml.jackson.core:jackson-databind:2.5.2'
	}

	sourceCompatibility = 1.8
}

project(':qemu-qapi') {

	sourceSets {
		generate
	}

	configurations {
		generateCompile.extendsFrom compile
		generateRuntime.extendsFrom runtime

		generateCompile.exclude group: 'commons-logging'
		generateCompile.exclude group: 'log4j'
	}

	dependencies {
		generateCompile "com.google.guava:guava:18.0"
		generateCompile "org.apache.velocity:velocity:1.7"
		generateCompile "org.apache.velocity:velocity-tools:2.0"
		generateCompile "net.sf.jopt-simple:jopt-simple:4.8"
		// generateCompile "commons-logging:commons-logging:1.1.3"
		generateCompile "com.google.code.gson:gson:2.3.1"

		def slf4jVersion = '1.7.12'
		generateRuntime "org.slf4j:slf4j-simple:$slf4jVersion"
		generateRuntime "org.slf4j:log4j-over-slf4j:$slf4jVersion"
		generateRuntime "org.slf4j:jcl-over-slf4j:$slf4jVersion"

                testCompile "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.5.2"
		testCompile project(':qemu-manager')
		testCompile project(':qemu-exec').sourceSets.test.output
	}

	task('generate', type: JavaExec, dependsOn: compileGenerateJava) {
		outputs.upToDateWhen { false }
		doFirst {
			delete fileTree("src/main/java/org/anarres/qemu/qapi/api") {
				include "*.java"
				exclude "package-info.java"
			}
		}
		main = 'org.anarres.qemu.qapi.generator.Main'
		classpath = configurations.generateRuntime + sourceSets.generate.output
		// See also http://repo.or.cz/w/qemu/qmp-unstable.git/blob_plain/HEAD:/qapi-schema.json
	}

}

project(':qemu-image') {
	dependencies {
	}
}

project(':qemu-exec') {
	dependencies {
		compile project(':qemu-image')
		compile 'org.codehaus.mojo:animal-sniffer-annotations:1.14'

		// Can be changed to qemu-qapi when we move QEmuProcess to qemu-exec.
		testCompile project(':qemu-manager')
		// testCompile 'commons-io:commons-io:2.4'
	}
}

project(':qemu-manager') {
	dependencies {
		compile project(':qemu-qapi')
		compile project(':qemu-exec')

		testCompile project(':qemu-exec').sourceSets.test.output
	}
}

project(':qemu-examples') {
	dependencies {
		compile project(':qemu-manager')
		compile 'com.google.auto.service:auto-service:1.0-rc2'
		compile 'com.jcraft:jsch:0.1.52'

		testCompile project(':qemu-exec').sourceSets.test.output
	}

	apply plugin: 'application'

	mainClassName = 'org.anarres.qemu.examples.Main'
}

aggregateJavadoc {
	options.links "http://docs.oracle.com/javase/6/docs/api/",
		"https://google-gson.googlecode.com/svn/trunk/gson/docs/javadocs/"
	options.use true
	options.linkSource true
}
