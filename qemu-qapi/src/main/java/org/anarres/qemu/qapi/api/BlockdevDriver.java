package org.anarres.qemu.qapi.api;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;

/**
 * Autogenerated class.
 *
 * <pre>QApiEnumDescriptor{name=BlockdevDriver, data=[blkdebug, blkverify, bochs, cloop, copy-on-read, dmg, file, ftp, ftps, gluster, host_cdrom, host_device, http, https, iscsi, luks, nbd, nfs, null-aio, null-co, nvme, parallels, qcow, qcow2, qed, quorum, raw, rbd, replication, sheepdog, ssh, throttle, vdi, vhdx, vmdk, vpc, vvfat, vxhs], fields=null}</pre>
 */
// QApiEnumDescriptor{name=BlockdevDriver, data=[blkdebug, blkverify, bochs, cloop, copy-on-read, dmg, file, ftp, ftps, gluster, host_cdrom, host_device, http, https, iscsi, luks, nbd, nfs, null-aio, null-co, nvme, parallels, qcow, qcow2, qed, quorum, raw, rbd, replication, sheepdog, ssh, throttle, vdi, vhdx, vmdk, vpc, vvfat, vxhs], fields=null}
public enum BlockdevDriver {
	blkdebug("blkdebug"),
	blkverify("blkverify"),
	bochs("bochs"),
	cloop("cloop"),
	copy_on_read("copy-on-read"),
	dmg("dmg"),
	file("file"),
	ftp("ftp"),
	ftps("ftps"),
	gluster("gluster"),
	host_cdrom("host_cdrom"),
	host_device("host_device"),
	http("http"),
	https("https"),
	iscsi("iscsi"),
	luks("luks"),
	nbd("nbd"),
	nfs("nfs"),
	null_aio("null-aio"),
	null_co("null-co"),
	nvme("nvme"),
	parallels("parallels"),
	qcow("qcow"),
	qcow2("qcow2"),
	qed("qed"),
	quorum("quorum"),
	raw("raw"),
	rbd("rbd"),
	replication("replication"),
	sheepdog("sheepdog"),
	ssh("ssh"),
	throttle("throttle"),
	vdi("vdi"),
	vhdx("vhdx"),
	vmdk("vmdk"),
	vpc("vpc"),
	vvfat("vvfat"),
	vxhs("vxhs"),
	__UNKNOWN("<unknown>");

	private final java.lang.String jsonValue;

	/* pp */ BlockdevDriver(@Nonnull java.lang.String jsonValue) {
		this.jsonValue = jsonValue;
	}

	@JsonValue
	public java.lang.String getJsonValue() {
		return jsonValue;
	}
}
